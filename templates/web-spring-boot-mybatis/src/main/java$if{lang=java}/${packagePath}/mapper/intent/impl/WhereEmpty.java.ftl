/*  This class is generated by CodeMan */package ${packageName}.mapper.intent.impl;import ${packageName}.mapper.intent.api.OrderQuery;import ${packageName}.mapper.intent.api.WhereQuery;import java.util.ArrayList;import java.util.Arrays;import java.util.List;import java.util.Optional;import java.util.stream.Stream;@SuppressWarnings("unchecked")public class WhereEmpty<T> extends WhereItem<T> implements WhereQuery<T> {    @Override    public WhereQuery<T> or(WhereQuery<T> where) {        return where;    }    @Override    public WhereQuery<T> and(WhereQuery<T> where) {        return where;    }    @Override    public final OrderQuery<T> orderBy(OrderQuery<T> order) {        return Optional.of(order).orElse(this);    }    @Override    public final OrderQuery<T> orderBy(OrderQuery<T> order1, OrderQuery<T> order2) {        return Stream.of(order1, order2).reduce(OrderQuery::orderBy).orElse(this);    }    @Override    public final OrderQuery<T> orderBy(OrderQuery<T> order1, OrderQuery<T> order2, OrderQuery<T> order3, OrderQuery<T>... orders) {        List<OrderQuery<T>> list = new ArrayList<>(List.of(order1, order2, order3));        list.addAll(Arrays.asList(orders));        return list.stream().reduce(OrderQuery::orderBy).orElse(this);    }}