/*  This class is generated by CodeMan */package ${packageName}.mapper.intent.impl;public class TableField<Table,Type> {    public String name;    public TableField(String name) {        this.name = name;    }    public OrderQuery<Table> asc() {        return new OrderQuery<>(name, false);    }    public OrderQuery<Table> desc() {        return new OrderQuery<>(name, true);    }    public Where<Table> eq(Type value) {        return equal(value);    }    public Where<Table> equal(Type value) {        return new Where<>(name, "=", value);    }    public Where<Table> ne(Type value) {        return notEqual(value);    }    public Where<Table> notEqual(Type value) {        return new Where<>(name, "<>", value);    }    public Where<Table> like(Type value) {        return new Where<>(name, "LIKE", value);    }    public final Where<Table> lt(Type value) {        return lessThan(value);    }    public final Where<Table> lessThan(Type value) {        return new Where<>(name, "<", value);    }    public Where<Table> le(Type value) {        return lessOrEqual(value);    }    public Where<Table> lessOrEqual(Type value) {        return new Where<>(name, "<=", value);    }    public Where<Table> gt(Type value) {        return greaterThan(value);    }    public Where<Table> greaterThan(Type value) {        return new Where<>(name, ">", value);    }    public Where<Table> ge(Type value) {        return greaterOrEqual(value);    }    public Where<Table> greaterOrEqual(Type value) {        return new Where<>(name, ">=", value);    }    public Where<Table> isNull() {        return new Where<>(name, "IS NULL", null);    }    public Where<Table> isNotNull() {        return new Where<>(name, "IS NOT NULL", null);    }    public Where<Table> in(List<Type> value) {        return new Where<>(name, "IN", value);    }}