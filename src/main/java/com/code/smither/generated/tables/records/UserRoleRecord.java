/*
 * This file is generated by jOOQ.
 */
package com.code.smither.generated.tables.records;


import com.code.smither.generated.tables.UserRole;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 角色
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRoleRecord extends UpdatableRecordImpl<UserRoleRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>traveler.user_role.id</code>. 主键标识
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>traveler.user_role.id</code>. 主键标识
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>traveler.user_role.user_id</code>. 用户ID
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>traveler.user_role.user_id</code>. 用户ID
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>traveler.user_role.role_id</code>. 角色ID
     */
    public void setRoleId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>traveler.user_role.role_id</code>. 角色ID
     */
    public Integer getRoleId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return UserRole.USER_ROLE.ID;
    }

    @Override
    public Field<Integer> field2() {
        return UserRole.USER_ROLE.USER_ID;
    }

    @Override
    public Field<Integer> field3() {
        return UserRole.USER_ROLE.ROLE_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public Integer component3() {
        return getRoleId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public Integer value3() {
        return getRoleId();
    }

    @Override
    public UserRoleRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UserRoleRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserRoleRecord value3(Integer value) {
        setRoleId(value);
        return this;
    }

    @Override
    public UserRoleRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRoleRecord
     */
    public UserRoleRecord() {
        super(UserRole.USER_ROLE);
    }

    /**
     * Create a detached, initialised UserRoleRecord
     */
    public UserRoleRecord(Integer id, Integer userId, Integer roleId) {
        super(UserRole.USER_ROLE);

        setId(id);
        setUserId(userId);
        setRoleId(roleId);
    }
}
