/*
 * This file is generated by jOOQ.
 */
package com.code.smither.generated.tables.records;


import com.code.smither.generated.tables.Permit;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 权限
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PermitRecord extends UpdatableRecordImpl<PermitRecord> implements Record4<Integer, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>traveler.permit.id</code>. 主键标识
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>traveler.permit.id</code>. 主键标识
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>traveler.permit.name</code>. 名称
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>traveler.permit.name</code>. 名称
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>traveler.permit.module</code>. 模块
     */
    public void setModule(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>traveler.permit.module</code>. 模块
     */
    public String getModule() {
        return (String) get(2);
    }

    /**
     * Setter for <code>traveler.permit.remark</code>. 备注说明
     */
    public void setRemark(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>traveler.permit.remark</code>. 备注说明
     */
    public String getRemark() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Permit.PERMIT.ID;
    }

    @Override
    public Field<String> field2() {
        return Permit.PERMIT.NAME;
    }

    @Override
    public Field<String> field3() {
        return Permit.PERMIT.MODULE;
    }

    @Override
    public Field<String> field4() {
        return Permit.PERMIT.REMARK;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getModule();
    }

    @Override
    public String component4() {
        return getRemark();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getModule();
    }

    @Override
    public String value4() {
        return getRemark();
    }

    @Override
    public PermitRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public PermitRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public PermitRecord value3(String value) {
        setModule(value);
        return this;
    }

    @Override
    public PermitRecord value4(String value) {
        setRemark(value);
        return this;
    }

    @Override
    public PermitRecord values(Integer value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PermitRecord
     */
    public PermitRecord() {
        super(Permit.PERMIT);
    }

    /**
     * Create a detached, initialised PermitRecord
     */
    public PermitRecord(Integer id, String name, String module, String remark) {
        super(Permit.PERMIT);

        setId(id);
        setName(name);
        setModule(module);
        setRemark(remark);
    }
}
