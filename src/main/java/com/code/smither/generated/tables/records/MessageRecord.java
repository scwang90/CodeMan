/*
 * This file is generated by jOOQ.
 */
package com.code.smither.generated.tables.records;


import com.code.smither.generated.tables.Message;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 消息
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessageRecord extends UpdatableRecordImpl<MessageRecord> implements Record6<Integer, Integer, Integer, Byte, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>traveler.message.id</code>. 主键标识
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>traveler.message.id</code>. 主键标识
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>traveler.message.user_id</code>. 用户ID
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>traveler.message.user_id</code>. 用户ID
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>traveler.message.target_id</code>. 相关ID
     */
    public void setTargetId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>traveler.message.target_id</code>. 相关ID
     */
    public Integer getTargetId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>traveler.message.type</code>. 类型
     */
    public void setType(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>traveler.message.type</code>. 类型
     */
    public Byte getType() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>traveler.message.content</code>. 内容
     */
    public void setContent(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>traveler.message.content</code>. 内容
     */
    public String getContent() {
        return (String) get(4);
    }

    /**
     * Setter for <code>traveler.message.create_time</code>. 创建时间
     */
    public void setCreateTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>traveler.message.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, Integer, Byte, String, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, Integer, Integer, Byte, String, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Message.MESSAGE.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Message.MESSAGE.USER_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Message.MESSAGE.TARGET_ID;
    }

    @Override
    public Field<Byte> field4() {
        return Message.MESSAGE.TYPE;
    }

    @Override
    public Field<String> field5() {
        return Message.MESSAGE.CONTENT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Message.MESSAGE.CREATE_TIME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public Integer component3() {
        return getTargetId();
    }

    @Override
    public Byte component4() {
        return getType();
    }

    @Override
    public String component5() {
        return getContent();
    }

    @Override
    public LocalDateTime component6() {
        return getCreateTime();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public Integer value3() {
        return getTargetId();
    }

    @Override
    public Byte value4() {
        return getType();
    }

    @Override
    public String value5() {
        return getContent();
    }

    @Override
    public LocalDateTime value6() {
        return getCreateTime();
    }

    @Override
    public MessageRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public MessageRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public MessageRecord value3(Integer value) {
        setTargetId(value);
        return this;
    }

    @Override
    public MessageRecord value4(Byte value) {
        setType(value);
        return this;
    }

    @Override
    public MessageRecord value5(String value) {
        setContent(value);
        return this;
    }

    @Override
    public MessageRecord value6(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public MessageRecord values(Integer value1, Integer value2, Integer value3, Byte value4, String value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageRecord
     */
    public MessageRecord() {
        super(Message.MESSAGE);
    }

    /**
     * Create a detached, initialised MessageRecord
     */
    public MessageRecord(Integer id, Integer userId, Integer targetId, Byte type, String content, LocalDateTime createTime) {
        super(Message.MESSAGE);

        setId(id);
        setUserId(userId);
        setTargetId(targetId);
        setType(type);
        setContent(content);
        setCreateTime(createTime);
    }
}
