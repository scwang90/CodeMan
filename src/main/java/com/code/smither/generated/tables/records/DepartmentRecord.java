/*
 * This file is generated by jOOQ.
 */
package com.code.smither.generated.tables.records;


import com.code.smither.generated.tables.Department;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 部门
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DepartmentRecord extends UpdatableRecordImpl<DepartmentRecord> implements Record7<Integer, Integer, Integer, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>traveler.department.id</code>. 主键标识
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>traveler.department.id</code>. 主键标识
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>traveler.department.parent_id</code>. 上级ID
     */
    public void setParentId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>traveler.department.parent_id</code>. 上级ID
     */
    public Integer getParentId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>traveler.department.company_id</code>. 公司ID
     */
    public void setCompanyId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>traveler.department.company_id</code>. 公司ID
     */
    public Integer getCompanyId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>traveler.department.code</code>. 编号
     */
    public void setCode(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>traveler.department.code</code>. 编号
     */
    public String getCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>traveler.department.name</code>. 名称
     */
    public void setName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>traveler.department.name</code>. 名称
     */
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>traveler.department.update_time</code>. 更新时间
     */
    public void setUpdateTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>traveler.department.update_time</code>. 更新时间
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>traveler.department.create_time</code>. 创建时间
     */
    public void setCreateTime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>traveler.department.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, Integer, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, Integer, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Department.DEPARTMENT.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Department.DEPARTMENT.PARENT_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Department.DEPARTMENT.COMPANY_ID;
    }

    @Override
    public Field<String> field4() {
        return Department.DEPARTMENT.CODE;
    }

    @Override
    public Field<String> field5() {
        return Department.DEPARTMENT.NAME;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Department.DEPARTMENT.UPDATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Department.DEPARTMENT.CREATE_TIME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getParentId();
    }

    @Override
    public Integer component3() {
        return getCompanyId();
    }

    @Override
    public String component4() {
        return getCode();
    }

    @Override
    public String component5() {
        return getName();
    }

    @Override
    public LocalDateTime component6() {
        return getUpdateTime();
    }

    @Override
    public LocalDateTime component7() {
        return getCreateTime();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getParentId();
    }

    @Override
    public Integer value3() {
        return getCompanyId();
    }

    @Override
    public String value4() {
        return getCode();
    }

    @Override
    public String value5() {
        return getName();
    }

    @Override
    public LocalDateTime value6() {
        return getUpdateTime();
    }

    @Override
    public LocalDateTime value7() {
        return getCreateTime();
    }

    @Override
    public DepartmentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public DepartmentRecord value2(Integer value) {
        setParentId(value);
        return this;
    }

    @Override
    public DepartmentRecord value3(Integer value) {
        setCompanyId(value);
        return this;
    }

    @Override
    public DepartmentRecord value4(String value) {
        setCode(value);
        return this;
    }

    @Override
    public DepartmentRecord value5(String value) {
        setName(value);
        return this;
    }

    @Override
    public DepartmentRecord value6(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public DepartmentRecord value7(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public DepartmentRecord values(Integer value1, Integer value2, Integer value3, String value4, String value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DepartmentRecord
     */
    public DepartmentRecord() {
        super(Department.DEPARTMENT);
    }

    /**
     * Create a detached, initialised DepartmentRecord
     */
    public DepartmentRecord(Integer id, Integer parentId, Integer companyId, String code, String name, LocalDateTime updateTime, LocalDateTime createTime) {
        super(Department.DEPARTMENT);

        setId(id);
        setParentId(parentId);
        setCompanyId(companyId);
        setCode(code);
        setName(name);
        setUpdateTime(updateTime);
        setCreateTime(createTime);
    }
}
