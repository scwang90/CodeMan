/*
 * This file is generated by jOOQ.
 */
package com.code.smither.generated.tables;


import com.code.smither.generated.Keys;
import com.code.smither.generated.Traveler;
import com.code.smither.generated.tables.records.UploadFileRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 文件上传
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UploadFile extends TableImpl<UploadFileRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>traveler.upload_file</code>
     */
    public static final UploadFile UPLOAD_FILE = new UploadFile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UploadFileRecord> getRecordType() {
        return UploadFileRecord.class;
    }

    /**
     * The column <code>traveler.upload_file.id</code>. 文件标识
     */
    public final TableField<UploadFileRecord, String> ID = createField(DSL.name("id"), SQLDataType.CHAR(22).nullable(false), this, "文件标识");

    /**
     * The column <code>traveler.upload_file.type</code>. 文件类型
     */
    public final TableField<UploadFileRecord, Integer> TYPE = createField(DSL.name("type"), SQLDataType.INTEGER.nullable(false), this, "文件类型");

    /**
     * The column <code>traveler.upload_file.name</code>. 文件名称
     */
    public final TableField<UploadFileRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(64).nullable(false), this, "文件名称");

    /**
     * The column <code>traveler.upload_file.path</code>. 存储路径
     */
    public final TableField<UploadFileRecord, String> PATH = createField(DSL.name("path"), SQLDataType.VARCHAR(64).nullable(false), this, "存储路径");

    /**
     * The column <code>traveler.upload_file.mime_type</code>. 媒体类型
     */
    public final TableField<UploadFileRecord, String> MIME_TYPE = createField(DSL.name("mime_type"), SQLDataType.VARCHAR(32).nullable(false), this, "媒体类型");

    /**
     * The column <code>traveler.upload_file.time</code>. 上传日期时间
     */
    public final TableField<UploadFileRecord, LocalDateTime> TIME = createField(DSL.name("time"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "上传日期时间");

    private UploadFile(Name alias, Table<UploadFileRecord> aliased) {
        this(alias, aliased, null);
    }

    private UploadFile(Name alias, Table<UploadFileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("文件上传"), TableOptions.table());
    }

    /**
     * Create an aliased <code>traveler.upload_file</code> table reference
     */
    public UploadFile(String alias) {
        this(DSL.name(alias), UPLOAD_FILE);
    }

    /**
     * Create an aliased <code>traveler.upload_file</code> table reference
     */
    public UploadFile(Name alias) {
        this(alias, UPLOAD_FILE);
    }

    /**
     * Create a <code>traveler.upload_file</code> table reference
     */
    public UploadFile() {
        this(DSL.name("upload_file"), null);
    }

    public <O extends Record> UploadFile(Table<O> child, ForeignKey<O, UploadFileRecord> key) {
        super(child, key, UPLOAD_FILE);
    }

    @Override
    public Schema getSchema() {
        return Traveler.TRAVELER;
    }

    @Override
    public UniqueKey<UploadFileRecord> getPrimaryKey() {
        return Keys.KEY_UPLOAD_FILE_PRIMARY;
    }

    @Override
    public List<UniqueKey<UploadFileRecord>> getKeys() {
        return Arrays.<UniqueKey<UploadFileRecord>>asList(Keys.KEY_UPLOAD_FILE_PRIMARY);
    }

    @Override
    public UploadFile as(String alias) {
        return new UploadFile(DSL.name(alias), this);
    }

    @Override
    public UploadFile as(Name alias) {
        return new UploadFile(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UploadFile rename(String name) {
        return new UploadFile(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UploadFile rename(Name name) {
        return new UploadFile(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, Integer, String, String, String, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
