/*
 * This file is generated by jOOQ.
 */
package com.code.smither.generated.tables;


import com.code.smither.generated.Keys;
import com.code.smither.generated.Traveler;
import com.code.smither.generated.tables.records.RolePermitRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 角色权限
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RolePermit extends TableImpl<RolePermitRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>traveler.role_permit</code>
     */
    public static final RolePermit ROLE_PERMIT = new RolePermit();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RolePermitRecord> getRecordType() {
        return RolePermitRecord.class;
    }

    /**
     * The column <code>traveler.role_permit.id</code>. 主键标识
     */
    public final TableField<RolePermitRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "主键标识");

    /**
     * The column <code>traveler.role_permit.role_id</code>. 角色ID
     */
    public final TableField<RolePermitRecord, Integer> ROLE_ID = createField(DSL.name("role_id"), SQLDataType.INTEGER.nullable(false), this, "角色ID");

    /**
     * The column <code>traveler.role_permit.permit_id</code>. 权限ID
     */
    public final TableField<RolePermitRecord, Integer> PERMIT_ID = createField(DSL.name("permit_id"), SQLDataType.INTEGER.nullable(false), this, "权限ID");

    private RolePermit(Name alias, Table<RolePermitRecord> aliased) {
        this(alias, aliased, null);
    }

    private RolePermit(Name alias, Table<RolePermitRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("角色权限"), TableOptions.table());
    }

    /**
     * Create an aliased <code>traveler.role_permit</code> table reference
     */
    public RolePermit(String alias) {
        this(DSL.name(alias), ROLE_PERMIT);
    }

    /**
     * Create an aliased <code>traveler.role_permit</code> table reference
     */
    public RolePermit(Name alias) {
        this(alias, ROLE_PERMIT);
    }

    /**
     * Create a <code>traveler.role_permit</code> table reference
     */
    public RolePermit() {
        this(DSL.name("role_permit"), null);
    }

    public <O extends Record> RolePermit(Table<O> child, ForeignKey<O, RolePermitRecord> key) {
        super(child, key, ROLE_PERMIT);
    }

    @Override
    public Schema getSchema() {
        return Traveler.TRAVELER;
    }

    @Override
    public Identity<RolePermitRecord, Integer> getIdentity() {
        return (Identity<RolePermitRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<RolePermitRecord> getPrimaryKey() {
        return Keys.KEY_ROLE_PERMIT_PRIMARY;
    }

    @Override
    public List<UniqueKey<RolePermitRecord>> getKeys() {
        return Arrays.<UniqueKey<RolePermitRecord>>asList(Keys.KEY_ROLE_PERMIT_PRIMARY);
    }

    @Override
    public List<ForeignKey<RolePermitRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RolePermitRecord, ?>>asList(Keys.ROLE_PERMIT_ROLE_ID_FK, Keys.ROLE_PERMIT_PERMIT_ID_FK);
    }

    private transient Role _role;
    private transient Permit _permit;

    public Role role() {
        if (_role == null)
            _role = new Role(this, Keys.ROLE_PERMIT_ROLE_ID_FK);

        return _role;
    }

    public Permit permit() {
        if (_permit == null)
            _permit = new Permit(this, Keys.ROLE_PERMIT_PERMIT_ID_FK);

        return _permit;
    }

    @Override
    public RolePermit as(String alias) {
        return new RolePermit(DSL.name(alias), this);
    }

    @Override
    public RolePermit as(Name alias) {
        return new RolePermit(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RolePermit rename(String name) {
        return new RolePermit(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RolePermit rename(Name name) {
        return new RolePermit(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
